rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
      
      // Add index for posts query
      allow list: if isAuthenticated() && request.query.limit <= 20;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // User preferences
    match /userPreferences/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Follows collection
    match /follows/{followId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.followerId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.followerId == request.auth.uid;
    }
  }
}